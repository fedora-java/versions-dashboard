package main

import (
	"testing"
)

var testCases = []struct {
	a, b     Version
	expected int
}{
	{"a1", "a01", 0},
	{"a", "aa", -1},
	{"a1", "aa1", -1},

	{"1.0", "1.0", 0},
	{"1.0", "2.0", -1},
	{"2.0", "1.0", 1},
	{"2.0.1", "2.0.1", 0},
	{"2.0", "2.0.1", -1},
	{"2.0.1", "2.0", 1},
	{"2.0.1a", "2.0.1a", 0},
	{"2.0.1a", "2.0.1", 1},
	{"2.0.1", "2.0.1a", -1},
	{"5.5p1", "5.5p1", 0},
	{"5.5p1", "5.5p2", -1},
	{"5.5p2", "5.5p1", 1},
	{"5.5p10", "5.5p10", 0},
	{"5.5p1", "5.5p10", -1},
	{"5.5p10", "5.5p1", 1},
	{"10xyz", "10.1xyz", -1},
	{"10.1xyz", "10xyz", 1},
	{"xyz10", "xyz10", 0},
	{"xyz10", "xyz10.1", -1},
	{"xyz10.1", "xyz10", 1},
	{"xyz.4", "xyz.4", 0},
	{"xyz.4", "8", -1},
	{"8", "xyz.4", 1},
	{"xyz.4", "2", -1},
	{"2", "xyz.4", 1},
	{"5.5p2", "5.6p1", -1},
	{"5.6p1", "5.5p2", 1},
	{"5.6p1", "6.5p1", -1},
	{"6.5p1", "5.6p1", 1},
	{"6.0.rc1", "6.0", 1},
	{"6.0", "6.0.rc1", -1},
	{"10b2", "10a1", 1},
	{"10a2", "10b2", -1},
	{"1.0aa", "1.0aa", 0},
	{"1.0a", "1.0aa", -1},
	{"1.0aa", "1.0a", 1},
	{"10.0001", "10.0001", 0},
	{"10.0001", "10.1", 0},
	{"10.1", "10.0001", 0},
	{"10.0001", "10.0039", -1},
	{"10.0039", "10.0001", 1},
	{"4.999.9", "5.0", -1},
	{"5.0", "4.999.9", 1},
	{"20101121", "20101121", 0},
	{"20101121", "20101122", -1},
	{"20101122", "20101121", 1},
	{"2_0", "2_0", 0},
	{"2.0", "2_0", 0},
	{"2_0", "2.0", 0},
	{"a", "a", 0},
	{"a+", "a+", 0},
	{"a+", "a_", 0},
	{"a_", "a+", 0},
	{"+a", "+a", 0},
	{"+a", "_a", 0},
	{"_a", "+a", 0},
	{"+_", "+_", 0},
	{"_+", "+_", 0},
	{"_+", "_+", 0},
	{"+", "_", 0},
	{"_", "+", 0},
	{"1.0~rc1", "1.0~rc1", 0},
	{"1.0~rc1", "1.0", -1},
	{"1.0", "1.0~rc1", 1},
	{"1.0~rc1", "1.0~rc2", -1},
	{"1.0~rc2", "1.0~rc1", 1},
	{"1.0~rc1~git123", "1.0~rc1~git123", 0},
	{"1.0~rc1~git123", "1.0~rc1", -1},
	{"1.0~rc1", "1.0~rc1~git123", 1},
	{"1.0^", "1.0^", 0},
	{"1.0^", "1.0", 1},
	{"1.0", "1.0^", -1},
	{"1.0^git1", "1.0^git1", 0},
	{"1.0^git1", "1.0", 1},
	{"1.0", "1.0^git1", -1},
	{"1.0^git1", "1.0^git2", -1},
	{"1.0^git2", "1.0^git1", 1},
	{"1.0^git1", "1.01", -1},
	{"1.01", "1.0^git1", 1},
	{"1.0^20160101", "1.0^20160101", 0},
	{"1.0^20160101", "1.0.1", -1},
	{"1.0.1", "1.0^20160101", 1},
	{"1.0^20160101^git1", "1.0^20160101^git1", 0},
	{"1.0^20160102", "1.0^20160101^git1", 1},
	{"1.0^20160101^git1", "1.0^20160102", -1},
	{"1.0~rc1^git1", "1.0~rc1^git1", 0},
	{"1.0~rc1^git1", "1.0~rc1", 1},
	{"1.0~rc1", "1.0~rc1^git1", -1},
	{"1.0^git1~pre", "1.0^git1~pre", 0},
	{"1.0^git1", "1.0^git1~pre", 1},
	{"1.0^git1~pre", "1.0^git1", -1},

	{"1b.fc17", "1b.fc17", 0},
	{"1b.fc17", "1.fc17", -1},
	{"1.fc17", "1b.fc17", 1},
	{"1g.fc17", "1g.fc17", 0},
	{"1g.fc17", "1.fc17", 1},
	{"1.fc17", "1g.fc17", -1},
	{"1.1.α", "1.1.α", 0},
	{"1.1.α", "1.1.β", 0},
	{"1.1.β", "1.1.α", 0},
	{"1.1.αα", "1.1.α", 0},
	{"1.1.α", "1.1.ββ", 0},
	{"1.1.ββ", "1.1.αα", 0},
}

func TestRpmVerCmp(t *testing.T) {

	for _, tt := range testCases {
		res := tt.a.RpmVerCmp(tt.b)
		if res != tt.expected {
			t.Errorf("RpmVerCmp(%s,%s): expected %d, got %d", tt.a, tt.b, tt.expected, res)
		}
	}

}
